# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2021 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.20.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-19 02:30+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../CMake/Modules/FindPkgConfig.cmake:6
msgid "FindPkgConfig"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:8
msgid "A ``pkg-config`` module for CMake."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:10
msgid ""
"Finds the ``pkg-config`` executable and adds the "
":command:`pkg_get_variable`, :command:`pkg_check_modules` and "
":command:`pkg_search_module` commands. The following variables will also "
"be set:"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:14
msgid "``PKG_CONFIG_FOUND``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:15
msgid "if pkg-config executable was found"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:16
msgid "``PKG_CONFIG_EXECUTABLE``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:17
msgid "pathname of the pkg-config program"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:617
msgid "``PKG_CONFIG_VERSION_STRING``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:19
msgid "version of pkg-config (since CMake 2.8.8)"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:621
msgid ""
"Checks for all the given modules, setting a variety of result variables "
"in the calling scope."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:633
msgid ""
"When the ``REQUIRED`` argument is given, the command will fail with an "
"error if module(s) could not be found."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:636
msgid "When the ``QUIET`` argument is given, no status messages will be printed."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:638
msgid ""
"The :variable:`CMAKE_PREFIX_PATH`, :variable:`CMAKE_FRAMEWORK_PATH`, and "
":variable:`CMAKE_APPBUNDLE_PATH` cache and environment variables will be "
"added to the ``pkg-config`` search path. The ``NO_CMAKE_PATH`` and "
"``NO_CMAKE_ENVIRONMENT_PATH`` arguments disable this behavior for the "
"cache variables and environment variables respectively. The "
":variable:`PKG_CONFIG_USE_CMAKE_PREFIX_PATH` variable set to ``FALSE`` "
"disables this behavior globally."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:650
msgid ""
"The ``IMPORTED_TARGET`` argument will create an imported target named "
"``PkgConfig::<prefix>`` that can be passed directly as an argument to "
":command:`target_link_libraries`."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:657
msgid ""
"The ``GLOBAL`` argument will make the imported target available in global"
" scope."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:661
msgid ""
"Non-library linker options reported by ``pkg-config`` are stored in the "
":prop_tgt:`INTERFACE_LINK_OPTIONS` target property."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:665
msgid ""
"Include directories specified with ``-isystem`` are stored in the "
":prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` target property.  Previous "
"versions of CMake left them in the :prop_tgt:`INTERFACE_COMPILE_OPTIONS` "
"property."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:671
msgid ""
"Each ``<moduleSpec>`` can be either a bare module name or it can be a "
"module name with a version constraint (operators ``=``, ``<``, ``>``, "
"``<=`` and ``>=`` are supported).  The following are examples for a "
"module named ``foo`` with various constraints:"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:676
msgid "``foo`` matches any version."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:677
msgid "``foo<2`` only matches versions before 2."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:678
msgid "``foo>=3.1`` matches any version from 3.1 or later."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:679
msgid "``foo=1.2.3`` requires that foo must be exactly version 1.2.3."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:681
msgid ""
"The following variables may be set upon return.  Two sets of values "
"exist: One for the common case (``<XXX> = <prefix>``) and another for the"
" information ``pkg-config`` provides when called with the ``--static`` "
"option (``<XXX> = <prefix>_STATIC``)."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:686
msgid "``<XXX>_FOUND``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:687
msgid "set to 1 if module(s) exist"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:688
msgid "``<XXX>_LIBRARIES``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:689
msgid "only the libraries (without the '-l')"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:690
msgid "``<XXX>_LINK_LIBRARIES``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:691
msgid "the libraries and their absolute paths"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:692
msgid "``<XXX>_LIBRARY_DIRS``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:693
msgid "the paths of the libraries (without the '-L')"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:694
msgid "``<XXX>_LDFLAGS``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:695
msgid "all required linker flags"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:696
msgid "``<XXX>_LDFLAGS_OTHER``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:697
msgid "all other linker flags"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:698
msgid "``<XXX>_INCLUDE_DIRS``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:699
msgid "the '-I' preprocessor flags (without the '-I')"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:700
msgid "``<XXX>_CFLAGS``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:701
msgid "all required cflags"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:703
msgid "``<XXX>_CFLAGS_OTHER``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:703
msgid "the other compiler flags"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:705
msgid ""
"All but ``<XXX>_FOUND`` may be a :ref:`;-list <CMake Language Lists>` if "
"the associated variable returned from ``pkg-config`` has multiple values."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:708
msgid ""
"Include directories specified with ``-isystem`` are stored in the "
"``<XXX>_INCLUDE_DIRS`` variable.  Previous versions of CMake left them in"
" ``<XXX>_CFLAGS_OTHER``."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:713
msgid ""
"There are some special variables whose prefix depends on the number of "
"``<moduleSpec>`` given.  When there is only one ``<moduleSpec>``, "
"``<YYY>`` will simply be ``<prefix>``, but if two or more "
"``<moduleSpec>`` items are given, ``<YYY>`` will be "
"``<prefix>_<moduleName>``."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:718
msgid "``<YYY>_VERSION``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:719
msgid "version of the module"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:720
msgid "``<YYY>_PREFIX``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:721
msgid "prefix directory of the module"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:722
msgid "``<YYY>_INCLUDEDIR``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:723
msgid "include directory of the module"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:725
msgid "``<YYY>_LIBDIR``"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:725
msgid "lib directory of the module"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:727
msgid ""
"For any given ``<prefix>``, ``pkg_check_modules()`` can be called "
"multiple times with different parameters.  Previous versions of CMake "
"cached and returned the first successful result."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:732
msgid ""
"If a full path to the found library can't be determined, but it's still "
"visible to the linker, pass it through as ``-l<name>``.  Previous "
"versions of CMake failed in this case."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:737
msgid "Examples:"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:743
msgid ""
"Looks for any version of glib2.  If found, the output variable "
"``GLIB2_VERSION`` will hold the actual version found."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:750
msgid ""
"Looks for at least version 2.10 of glib2.  If found, the output variable "
"``GLIB2_VERSION`` will hold the actual version found."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:757
msgid ""
"Looks for both glib2-2.0 (at least version 2.10) and any version of "
"gtk2+-2.0.  Only if both are found will ``FOO`` be considered found. The "
"``FOO_glib-2.0_VERSION`` and ``FOO_gtk+-2.0_VERSION`` variables will be "
"set to their respective found module versions."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:766
msgid ""
"Requires any version of ``xrender``.  Example output variables set by a "
"successful call::"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:795
msgid ""
"The behavior of this command is the same as :command:`pkg_check_modules`,"
" except that rather than checking for all the specified modules, it "
"searches for just the first successful match."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:808
msgid ""
"If a module is found, the ``<prefix>_MODULE_NAME`` variable will contain "
"the name of the matching module. This variable can be used if you need to"
" run :command:`pkg_get_variable`."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:813
msgid "Example:"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:858
msgid ""
"Retrieves the value of a pkg-config variable ``varName`` and stores it in"
" the result variable ``resultVar`` in the calling scope."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:865
msgid ""
"If ``pkg-config`` returns multiple values for the specified variable, "
"``resultVar`` will contain a :ref:`;-list <CMake Language Lists>`."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:868
msgid "For example:"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:886
msgid "Variables Affecting Behavior"
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:890
msgid ""
"This can be set to the path of the pkg-config executable.  If not "
"provided, it will be set by the module as a result of calling "
":command:`find_program` internally."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:894
msgid "The ``PKG_CONFIG`` environment variable can be used as a hint."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:901
msgid ""
"Specifies whether :command:`pkg_check_modules` and "
":command:`pkg_search_module` should add the paths in the "
":variable:`CMAKE_PREFIX_PATH`, :variable:`CMAKE_FRAMEWORK_PATH` and "
":variable:`CMAKE_APPBUNDLE_PATH` cache and environment variables to the "
"``pkg-config`` search path."
msgstr ""

#: ../../CMake/Modules/FindPkgConfig.cmake:907
msgid ""
"If this variable is not set, this behavior is enabled by default if "
":variable:`CMAKE_MINIMUM_REQUIRED_VERSION` is 3.1 or later, disabled "
"otherwise."
msgstr ""

