# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2021 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.20.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-19 02:30+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../CMake/Help/policy/CMP0069.rst:2
msgid "CMP0069"
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:6
msgid ":prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` is enforced when enabled."
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:8
msgid ""
"CMake 3.9 and newer prefer to add IPO flags whenever the "
":prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` target property is enabled and "
"produce an error if flags are not known to CMake for the current "
"compiler. Since a given compiler may not support IPO flags in all "
"environments in which it is used, it is now the project's responsibility "
"to use the :module:`CheckIPOSupported` module to check for support before"
" enabling the :prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` target property.  "
"This approach allows a project to conditionally activate IPO when "
"supported.  It also allows an end user to set the "
":variable:`CMAKE_INTERPROCEDURAL_OPTIMIZATION` variable in an environment"
" known to support IPO even if the project does not enable the property."
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:20
msgid ""
"Since CMake 3.8 and lower only honored "
":prop_tgt:`INTERPROCEDURAL_OPTIMIZATION` for the Intel compiler on Linux,"
" some projects may unconditionally enable the target property.  Policy "
"``CMP0069`` provides compatibility with such projects."
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:24
msgid ""
"This policy takes effect whenever the IPO property is enabled.  The "
"``OLD`` behavior for this policy is to add IPO flags only for Intel "
"compiler on Linux. The ``NEW`` behavior for this policy is to add IPO "
"flags for the current compiler or produce an error if CMake does not know"
" the flags."
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:29
msgid ""
"This policy was introduced in CMake version 3.9.  CMake version |release|"
" warns when the policy is not set and uses ``OLD`` behavior. Use the "
":command:`cmake_policy` command to set it to ``OLD`` or ``NEW`` "
"explicitly."
msgstr ""

#: ../../CMake/Help/policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition "
"<cmake-policies(7)>` and may be removed in a future version of CMake."
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:37
msgid "Examples"
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:39
msgid ""
"Behave like CMake 3.8 and do not apply any IPO flags except for Intel "
"compiler on Linux:"
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:51
msgid ""
"Use the :module:`CheckIPOSupported` module to detect whether IPO is "
"supported by the current compiler, environment, and CMake version. "
"Produce a fatal error if support is not available:"
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:67
msgid "Apply IPO flags only if compiler supports it:"
msgstr ""

#: ../../CMake/Help/policy/CMP0069.rst:83
msgid ""
"Apply IPO flags without any checks.  This may lead to build errors if IPO"
" is not supported by the compiler in the current environment.  Produce an"
" error if CMake does not know IPO flags for the current compiler:"
msgstr ""

