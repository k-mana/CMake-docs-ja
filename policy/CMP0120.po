# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2021 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.20.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-19 02:30+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../CMake/Help/policy/CMP0120.rst:2
msgid "CMP0120"
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:6
msgid "The :module:`WriteCompilerDetectionHeader` module is removed."
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:8
msgid ""
"CMake versions 3.1 through 3.19 provide this module to generate a C++ "
"compatibility layer by re-using information from CMake's table of "
"preprocessor checks for :manual:`cmake-compile-features(7)`.  However:"
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:12
msgid ""
"Those granular features have been superseded by meta-features for "
":ref:`Requiring Language Standards` such as ``cxx_std_11``.  Therefore no"
" new granular feature checks will be added and projects will need to use "
"other means to conditionally use new C++ features."
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:17
msgid ""
"The module exposes some of CMake's implementation details directly to C++"
" translation units."
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:20
msgid ""
"The module's approach effectively provides a header file with CMake, thus"
" tying the version of the header to the version of CMake. Many projects "
"found that the :module:`WriteCompilerDetectionHeader` was best used by "
"manually generating its header locally with a recent version of CMake and"
" then bundling it with the project source so that it could be used with "
"older CMake versions."
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:27
msgid ""
"For reasons including the above, CMake 3.20 and above prefer to not "
"provide the :module:`WriteCompilerDetectionHeader` module.  This policy "
"provides compatibility for projects that have not been ported away from "
"it.  Projects using the module should be updated to stop using it. "
"Alternatives include:"
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:33
msgid "Bundle a copy of the generated header in the project's source."
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:34
msgid "Use a third-party alternative, such as the CC0-licensed `Hedley`_."
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:35
msgid "Drop support for compilers too old to provide the features natively."
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:37
msgid ""
"The ``OLD`` behavior of this policy is for inclusion of the deprecated "
":module:`WriteCompilerDetectionHeader` module to work.  The ``NEW`` "
"behavior is for inclusion of the module to fail as if it does not exist."
msgstr ""

#: ../../CMake/Help/policy/CMP0120.rst:41
msgid ""
"This policy was introduced in CMake version 3.20.  CMake version "
"|release| warns when the policy is not set and uses ``OLD`` behavior. Use"
" the :command:`cmake_policy` command to set it to ``OLD`` or ``NEW`` "
"explicitly."
msgstr ""

#: ../../CMake/Help/policy/DEPRECATED.txt:2
msgid ""
"The ``OLD`` behavior of a policy is :manual:`deprecated by definition "
"<cmake-policies(7)>` and may be removed in a future version of CMake."
msgstr ""

