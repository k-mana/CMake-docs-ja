# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2021 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.20.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-19 02:30+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../CMake/Help/prop_sf/COMPILE_DEFINITIONS.rst:2
msgid "COMPILE_DEFINITIONS"
msgstr ""

#: ../../CMake/Help/prop_sf/COMPILE_DEFINITIONS.rst:4
msgid "Preprocessor definitions for compiling a source file."
msgstr ""

#: ../../CMake/Help/prop_sf/COMPILE_DEFINITIONS.rst:6
msgid ""
"The ``COMPILE_DEFINITIONS`` property may be set to a semicolon-separated "
"list of preprocessor definitions using the syntax ``VAR`` or "
"``VAR=value``. Function-style definitions are not supported.  CMake will "
"automatically escape the value correctly for the native build system "
"(note that CMake language syntax may require escapes to specify some "
"values).  This property may be set on a per-configuration basis using the"
" name ``COMPILE_DEFINITIONS_<CONFIG>`` where ``<CONFIG>`` is an upper-"
"case name (ex.  ``COMPILE_DEFINITIONS_DEBUG``)."
msgstr ""

#: ../../CMake/Help/prop_sf/COMPILE_DEFINITIONS.rst:15
msgid ""
"CMake will automatically drop some definitions that are not supported by "
"the native build tool.  Xcode does not support per-configuration "
"definitions on source files."
msgstr ""

#: ../../CMake/Help/include/COMPILE_DEFINITIONS_DISCLAIMER.txt:1
msgid ""
"Disclaimer: Most native build tools have poor support for escaping "
"certain values.  CMake has work-arounds for many cases but some values "
"may just not be possible to pass correctly.  If a value does not seem to "
"be escaped correctly, do not attempt to work-around the problem by adding"
" escape sequences to the value.  Your work-around may break in a future "
"version of CMake that has improved escape support.  Instead consider "
"defining the macro in a (configured) header file.  Then report the "
"limitation.  Known limitations include::"
msgstr ""

#: ../../CMake/Help/include/COMPILE_DEFINITIONS_DISCLAIMER.txt:17
msgid ""
"CMake does not reject these values outright because they do work in some "
"cases.  Use with caution."
msgstr ""

#: ../../CMake/Help/prop_sf/COMPILE_DEFINITIONS.rst:21
msgid ""
"Contents of ``COMPILE_DEFINITIONS`` may use :manual:`cmake-generator-"
"expressions(7)` with the syntax ``$<...>``.  See the :manual:`cmake-"
"generator-expressions(7)` manual for available expressions.  However, "
":generator:`Xcode` does not support per-config per-source settings, so "
"expressions that depend on the build configuration are not allowed with "
"that generator."
msgstr ""

#: ../../CMake/Help/prop_sf/COMPILE_DEFINITIONS.rst:28
msgid ""
"Generator expressions should be preferred instead of setting the "
"alternative per-configuration property."
msgstr ""

