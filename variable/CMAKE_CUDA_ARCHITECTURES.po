# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2021 Kitware, Inc. and Contributors
# This file is distributed under the same license as the CMake package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CMake 3.20.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-19 02:30+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:2
msgid "CMAKE_CUDA_ARCHITECTURES"
msgstr ""

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:6
msgid "Default value for :prop_tgt:`CUDA_ARCHITECTURES` property of targets."
msgstr ""

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:8
msgid ""
"Initialized by the :envvar:`CUDAARCHS` environment variable if set. "
"Otherwise as follows depending on :variable:`CMAKE_CUDA_COMPILER_ID "
"<CMAKE_<LANG>_COMPILER_ID>`:"
msgstr ""

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:11
msgid "For ``Clang``: the oldest architecture that works."
msgstr ""

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:13
msgid ""
"For ``NVIDIA``: the default architecture chosen by the compiler. See "
"policy :policy:`CMP0104`."
msgstr ""

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:16
msgid ""
"Users are encouraged to override this, as the default varies across "
"compilers and compiler versions."
msgstr ""

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:19
msgid ""
"This variable is used to initialize the :prop_tgt:`CUDA_ARCHITECTURES` "
"property on all targets. See the target property for additional "
"information."
msgstr ""

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:23
msgid "Examples"
msgstr ""

#: ../../CMake/Help/variable/CMAKE_CUDA_ARCHITECTURES.rst:35
msgid ""
"``CMAKE_CUDA_ARCHITECTURES`` will default to ``75`` unless overridden by "
"the user."
msgstr ""

